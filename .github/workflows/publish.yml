name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v1.2.3-beta, etc.
  workflow_dispatch:  # Allows manual triggering
    inputs:
      target:
        description: 'Target repository'
        required: true
        default: 'testpypi'
        type: choice
        options:
        - testpypi
        - pypi

jobs:
  # First run test-and-build to ensure everything passes
  test-and-build:
    uses: ./.github/workflows/test-and-build.yml

  publish-testpypi:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v') &&
      (contains(github.ref, 'a') ||
      contains(github.ref, 'b') ||
      contains(github.ref, 'rc'))
      ||
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.target == 'testpypi'
    environment: testpypi

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        password: ${{ secrets.TESTPYPI_API_TOKEN }}
        verbose: true

  publish-pypi:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v') &&
      !contains(github.ref, 'a') &&
      !contains(github.ref, 'b') &&
      !contains(github.ref, 'rc')
      ||
      github.event_name == 'workflow_dispatch' &&
      github.event.inputs.target == 'pypi'
    environment: pypi

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
        verbose: true

  create-release:
    needs: [test-and-build, publish-pypi]
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v') &&
      !contains(github.ref, 'a') &&
      !contains(github.ref, 'b') &&
      !contains(github.ref, 'rc')

    steps:
    - uses: actions/checkout@v4

    - name: Extract version from tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release v${{ steps.version.outputs.version }}
        body: |
          Release v${{ steps.version.outputs.version }}

          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
        draft: false
        prerelease: false
